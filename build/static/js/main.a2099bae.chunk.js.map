{"version":3,"sources":["components/ClientPage/ScoreItem.js","components/ClientPage/ClientPage.js","components/Header/Header.js","components/Footer/Footer.js","components/AdminPage/AdminPage.js","components/AdminSection/AdminSection.js","App.js","reportWebVitals.js","index.js"],"names":["ScoreItem","props","className","position","team","score","ClientPage","useState","scores","setScores","getScores","axios","get","then","res","data","useEffect","setInterval","sort","a","b","map","teamScore","_id","Header","Footer","AdminPage","useSession","authenticated","removeSession","_v","player1","setPlayer1","player2","setPlayer2","player3","setPlayer3","player4","setPlayer4","show","setShow","alert","useAlert","event","preventDefault","lvl1","lvl2","lvl3","lvl4","sortedScores","slice","prevState","indexOf","Button","onClick","Form","Table","striped","bordered","hover","variant","Control","type","autoComplete","onChange","target","value","console","log","name","placeholder","scoreData","post","Offcanvas","onHide","placement","bsPrefix","closeButton","Title","Body","AdminSection","username","SetUsername","password","setPassword","confirmPassword","setConfirmPassword","showConfirm","setShowConfirm","saveSession","checkfields","required","user","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.a2099bae.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport \"./ClientPage.scss\";\r\nimport \"./ClientPage.css\";\r\n\r\nfunction ScoreItem(props) {\r\n  return (\r\n    <div className={\"score-board\" + props.position}>\r\n      <div className=\"score-item\">\r\n        <h1>{props.team}</h1>\r\n        <h2>{props.score}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ScoreItem1 = forwardRef((props, ref) => (\r\n  <div ref={ref} className={\"score-board\" + props.position}>\r\n    <div className=\"score-item\">\r\n      <h1>{props.team}</h1>\r\n      <h2>{props.score}</h2>\r\n    </div>\r\n  </div>\r\n));\r\n\r\nexport default ScoreItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ClientPage.scss\";\r\nimport \"./ClientPage.css\";\r\nimport ScoreItem from \"./ScoreItem\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction ClientPage() {\r\n  const [scores, setScores] = useState([null]);\r\n\r\n  function getScores() {\r\n    axios.get(\"/scores\").then((res) => {\r\n      setScores([res.data]);\r\n    });\r\n  }\r\n\r\n  useEffect(function () {\r\n    getScores();\r\n\r\n    setInterval(() => {\r\n      getScores();\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"outer\">\r\n      <div className=\"middle\">\r\n        <div className=\"inner\">\r\n          <div className=\"d-flex flex-column justify-content-center w-100 h-100\">\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n              {scores[0] !== null\r\n                ? scores[0]\r\n                    .sort((a, b) => a.position - b.position)\r\n                    .map((score) => (\r\n                      <ScoreItem\r\n                        key={score._id}\r\n                        team={score.team}\r\n                        score={score.teamScore}\r\n                        position={score.position}\r\n                      />\r\n                    ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClientPage;\r\n\r\n  /* <FlipMove typeName={null}> \r\n\r\n   {scores[0] !==null ?  scores[0].sort((a,b)=> a.position -b.position).map((score) => (\r\n      <ScoreItem\r\n        key={score._id}\r\n        team={score.team}\r\n        score={score.teamScore}\r\n        position={score.position}\r\n      />\r\n  )) : null}\r\n\r\n</FlipMove> */\r\n\r\n","import \"./Header.scss\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(){\r\n    return (\r\n        <header>\r\n        <h1>ScoreBoard Admin</h1>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import \"./Footer.scss\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer>\r\n\r\n        <p>sandul jayathileka - github/cypherdec © 2021</p>\r\n        \r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./AdminPage.scss\";\r\nimport \"./AdminPage.css\";\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Offcanvas from 'react-bootstrap/Offcanvas'\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { useSession } from 'react-session-persist';\r\nimport AdminSection from \"../AdminSection/AdminSection\";\r\n\r\n\r\n\r\nfunction AdminPage() {\r\n  \r\n  const { authenticated, removeSession } = useSession();\r\n\r\n  const [player1, setPlayer1] = useState({\r\n    _id: '',\r\n    team: '',\r\n    teamScore:'', \r\n    position: '',\r\n    _v: ''\r\n  });\r\n\r\n  const [player2, setPlayer2] = useState({\r\n    _id: '',\r\n    team: '',\r\n    teamScore:'', \r\n    position: '',\r\n    _v: ''\r\n  });\r\n\r\n  const [player3, setPlayer3] = useState({\r\n    _id: '',\r\n    team: '',\r\n    teamScore:'', \r\n    position: '',\r\n    _v: ''\r\n  });\r\n\r\n  const [player4, setPlayer4] = useState({\r\n    _id: '',\r\n    team: '',\r\n    teamScore:'', \r\n    position: '',\r\n    _v: ''\r\n  });\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const alert = useAlert();\r\n\r\n\r\n  \r\n  function getScores() {\r\n    axios.get(\"/scores\").then((res) => {\r\n      setPlayer1(res.data[0]);\r\n      setPlayer2(res.data[1]);\r\n      setPlayer3(res.data[2]);\r\n      setPlayer4(res.data[3]);\r\n    })\r\n  }\r\n\r\n  useEffect(function () {\r\n    getScores();\r\n  },[]);\r\n\r\n\r\n  useEffect(function(){\r\n    let lvl1 = player1.teamScore;\r\n    let lvl2 = player2.teamScore;\r\n    let lvl3 = player3.teamScore;\r\n    let lvl4 = player4.teamScore;\r\n\r\n    let allScores = [lvl1,lvl2,lvl3,lvl4];\r\n\r\n    const sortedScores = allScores.slice().sort((a, b) => b - a);\r\n\r\n    setPlayer1(prevState => ({\r\n      ...prevState,\r\n      position: sortedScores.indexOf(lvl1) + 1\r\n    }));\r\n\r\n    setPlayer2(prevState => ({\r\n      ...prevState,\r\n      position: sortedScores.indexOf(lvl2) + 1\r\n    }));\r\n\r\n    setPlayer3(prevState => ({\r\n      ...prevState,\r\n      position: sortedScores.indexOf(lvl3) + 1\r\n    }));\r\n\r\n    setPlayer4(prevState => ({\r\n      ...prevState,\r\n      position: sortedScores.indexOf(lvl4) + 1\r\n    }));\r\n\r\n  },[player1.teamScore, player2.teamScore, player3.teamScore, player4.teamScore]);\r\n  \r\n\r\n  function handlePlayer1ScoreChange(event){\r\n    \r\n    setPlayer1(prevState => ({\r\n      ...prevState,\r\n      teamScore: event.target.value\r\n    }));\r\n\r\n    console.log(player1);\r\n  }\r\n\r\n  function handlePlayer2ScoreChange(event){\r\n    setPlayer2(prevState => ({\r\n      ...prevState,\r\n      teamScore: event.target.value\r\n    }));\r\n\r\n  }\r\n\r\n  function handlePlayer3ScoreChange(event){\r\n    setPlayer3(prevState => ({\r\n      ...prevState,\r\n      teamScore: event.target.value\r\n    }));\r\n\r\n  }\r\n\r\n  function handlePlayer4ScoreChange(event){\r\n    setPlayer4(prevState => ({\r\n      ...prevState,\r\n      teamScore: event.target.value\r\n    }));\r\n\r\n  }\r\n\r\n\r\n  function handleUpdate(event){\r\n    event.preventDefault();\r\n\r\n    let scoreData = [player1,player2,player3,player4];\r\n\r\n    axios.post(\"/update\", {\r\n       scoreData: scoreData\r\n      }).then((res)=>{        \r\n        alert.show(res.data);\r\n      });\r\n  }\r\n\r\n\r\n  function handleReset(event){\r\n    event.preventDefault();\r\n    setPlayer1(prevState => ({\r\n      ...prevState,\r\n      teamScore: 0\r\n    }));\r\n\r\n    setPlayer2(prevState => ({\r\n      ...prevState,\r\n      teamScore: 0\r\n    }));\r\n\r\n    setPlayer3(prevState => ({\r\n      ...prevState,\r\n      teamScore: 0\r\n    }));\r\n\r\n    setPlayer4(prevState => ({\r\n      ...prevState,\r\n      teamScore: 0\r\n    }));\r\n  }\r\n\r\n\r\n  async function handleLogout (event){\r\n    event.preventDefault();\r\n\r\n    removeSession({\r\n      authenticated,\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (  <> {authenticated ?  \r\n    <div className=\"background-div\">\r\n      <Header/> \r\n      <div className=\"btn-div\">\r\n        <Button className=\"btnLogout\" onClick={handleLogout}>Logout</Button>\r\n      </div>\r\n      <div className=\"tablediv\">\r\n        <Form>\r\n          <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>Team</th>\r\n                <th>Score</th>\r\n                <th>Place</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{player1.team}</td>\r\n                <td> <Form.Control type=\"number\" autoComplete=\"off\" onChange={handlePlayer1ScoreChange} value={player1.teamScore}  name=\"lvl1Score\" placeholder=\"Enter Score\" />  </td>\r\n                <td>{player1.position}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>{player2.team}</td>\r\n                <td> <Form.Control type=\"number\" autoComplete=\"off\" onChange={handlePlayer2ScoreChange} value={player2.teamScore}  name=\"lvl2score\" placeholder=\"Enter Score\" />  </td>\r\n                <td>{player2.position}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>{player3.team}</td>\r\n                <td> <Form.Control type=\"number\" autoComplete=\"off\" onChange={handlePlayer3ScoreChange} value={player3.teamScore}  name=\"lvl3score\" placeholder=\"Enter Score\" />  </td>\r\n                <td>{player3.position}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>{player4.team}</td>\r\n                <td> <Form.Control type=\"number\"  autoComplete=\"off\" onChange={handlePlayer4ScoreChange} value={player4.teamScore}  name=\"lvl4score\" placeholder=\"Enter Score\" />  </td>\r\n                <td>{player4.position}</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        \r\n          <Button className=\"btnupdate\" onClick={handleUpdate} >Update Scores</Button>\r\n          <Button className=\"btnreset\" onClick={handleReset}>Reset Scores</Button>\r\n          <Button className=\"btn-instructions\" onClick={handleShow}>Instructions</Button>\r\n\r\n        </Form>        \r\n\r\n      <Offcanvas show={show} onHide={handleClose} placement=\"bottom\" className=\"offcanvas\" bsPrefix=\"h-auto\">\r\n        <Offcanvas.Header closeButton className=\"canvas-head\">\r\n          <Offcanvas.Title >Instructions</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body className=\"canvas-div\">\r\n          <p>Change scores by clicking on the score you wish to change</p>\r\n          <p>Click on the green \"Update Score\" button to save changes and make them visible to the audience</p>\r\n          <p>Click the yellow \"Reset Score\" button to reset all scores to 0. **note this will not update the scores. This is expected behaviour to prevent accidental resets. In order to permanantly reset scores, click the reset button and then the update button</p>\r\n          <p>If you accidentally clicked reset, refreshing the page will restore the previous scores</p>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n\r\n      </div>\r\n\r\n      <Footer/>\r\n      \r\n    </div> : AdminSection} </>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport AdminPage from \"../AdminPage/AdminPage\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"./AdminSection.css\";\r\nimport \"./AdminSection.scss\";\r\n\r\nimport { useSession } from \"react-session-persist\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\n\r\nfunction AdminSection() {\r\n  const [username, SetUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showConfirm, setShowConfirm] = useState(\"hidden\");\r\n\r\n  const { authenticated, saveSession } = useSession();\r\n\r\n  const alert = useAlert();\r\n\r\n  function getLogin() {\r\n    axios.get(\"/login\").then((res) => {\r\n      setShowConfirm(res.data);\r\n    });\r\n  }\r\n\r\n  useEffect(function () {\r\n    getLogin();\r\n  }, []);\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault();\r\n\r\n    if (showConfirm === \"password\") {\r\n      newUserLogin();\r\n    }\r\n    else{\r\n      UserLogin();\r\n    }\r\n  }\r\n\r\n  function UserLogin(){\r\n    if(checkfields()){\r\n      axios.post('/login', {\r\n        username: username,\r\n        password: password\r\n      }).then((res) => {\r\n        if (res.data === \"ok\") {\r\n          saveSession({ user: username });\r\n          setShowConfirm(\"hidden\");\r\n          SetUsername(\"\");\r\n          setPassword(\"\");\r\n        }\r\n        else{\r\n          alert.show(\"error, incorrect credentials\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  function newUserLogin(){\r\n    if (newPass()) {\r\n      axios.post(\"/newlogin\", {\r\n        username: username,\r\n        password: password\r\n      }).then((res) => {\r\n        if (res.data === \"ok\") {\r\n          saveSession({ user: username });\r\n          setShowConfirm(\"hidden\");\r\n          SetUsername(\"\");\r\n          setPassword(\"\");\r\n        }\r\n        else{\r\n          alert.show(\"error, try again\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function newPass() {\r\n    if (password === confirmPassword && checkfields()) {\r\n      return true;\r\n    } else {\r\n      alert.show(\"passwords do not match\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function checkfields(){\r\n    if(password === '' && username ===''){\r\n      alert.show(\"fields cannot be blank\");\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function handleUserChange(event) {\r\n    SetUsername(event.target.value);\r\n  }\r\n\r\n  function handlePassChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPassChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        <AdminPage />\r\n      ) : (\r\n        <>\r\n          <Header />\r\n          <div className=\"form-container\">\r\n            <div className=\"form-div\">\r\n              <Form>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"username\"\r\n                  onChange={handleUserChange}\r\n                  value={username}\r\n                  autoComplete=\"off\"\r\n                  required={true}\r\n                />\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={handlePassChange}\r\n                  value={password}\r\n                  autoComplete=\"off\"\r\n                  required={true}\r\n                />\r\n                <Form.Control\r\n                  type={showConfirm}\r\n                  placeholder=\"confirm password\"\r\n                  onChange={handleConfirmPassChange}\r\n                  value={confirmPassword}\r\n                  autoComplete=\"off\"\r\n                />\r\n                <Button className=\"btnLogin\" onClick={handleLogin}>\r\n                  Login\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminSection;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ClientPage from \"./components/ClientPage/ClientPage\";\nimport AdminSection from \"./components/AdminSection/AdminSection\";\n\n\nimport Session from 'react-session-persist';\n\n\nfunction App() {\n  \n  return <Router>\n      <Session>\n        <Route exact path = '/' component={ClientPage}/>\n        <Route exact path = '/admin' component={AdminSection}/>\n    </Session>\n  </Router>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n        <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}